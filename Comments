Useful links:
https://www.baeldung.com/spring-security-session
https://www.thymeleaf.org/
https://moqups.com/
https://github.com/valdisvi/spring-boot-demo
spring.io/tools
https://www.baeldung.com/spring-security-login-error-handling-localization
http://www.springboottutorial.com/creating-web-application-with-spring-boot
https://www.springboottutorial.com/spring-boot-and-h2-in-memory-database
https://github.com/hellokoding/hellokoding-courses/tree/master/springboot-examples/springboot-registration-login/src/main
https://www.oodlestechnologies.com/blogs/Use-Thymeleaf-And-JSP-Simultaneously-In-Spring-Boot-App/
https://drive.google.com/file/d/1Za6cCViRFUQEqKG6qAV2yOuuxlVDjyqv/view?usp=sharing
https://drive.google.com/file/d/10z9W99jFSZtMlSGpD-u0D5Xtb5wezHE5/view?usp=sharing
https://failiem.lv/u/ab6fwyuh
https://drive.google.com/file/d/1QrCBYL0Wyt4IyfC0Jl-iheCfgNYf8ube/view?usp=sharing

http://www.h2database.com/html/tutorial.html
http://h2database.com/html/features.html#connection_modes
http://h2database.com/html/features.html#auto_mixed_mode

Instructions for git:
1) Open console in directory where you're going to make the project
2) Type git clone https://github.com/Eliiona/Java_BC.git -- will download current files into a new folder Java_BC
   and link that repository 

--> git checkout master / git checkout branch --- switch between branches we should only
      commit to branch, master should be edited on GitHub.
      !! Using this command files change in your pc directory according to the branch youre looking at. 
      When making changes in one branch they cannot be pushed to a different branch.
      
--> git pull origin master --- getting changes commited by someone else on the repository master branch 
      !!Start every task with this
--> git checkout -b [new branch name with issue number] --- create new branch for your assigned issue
--> git add -A / git add filename.filetype --- add every change or specific file
--> git commit -m "Closed No" --- keep comments useful for teammates
--> git push origin -u [new branch name with issue number] --- push to create new branch ir repository
--> git push --- commit changes after successfully commited to the right branch

--> git branch -d branch_name --- delete branch when done working on it - push and merge complete
--> git branch -D branch_name ---delete branch forcefully when made a mistake
--> git status --- see what has happened to repository - files added and such

List of comands - https://gist.github.com/davfre/8313299

$2a$10$mzgE8qLgaudI4vFuP2GaBOqlwtktiPKF88LaGfNjR66iyo.Ki4CZK

uploaded from Elinas home laptop

INSERT INTO ROLE_TABLE VALUES ( 1, 'User')

INSERT INTO USER_TABLE VALUES (1, 'name', '$2a$10$sbLRDIGdFCQ/.46x6v3UAudUJILlgyZfzfyKKNx6Q2dct9cagvAPu', 'surname', 'code', 1)

INSERT INTO ISSUE_TABLE VALUES (1,  '15:30 09/10', 'Issue description ',  1, FALSE, 'Issue1', 1)

INSERT INTO ISSUE_TABLE VALUES (2,  '15:30 09/10', 'Issue description ',  1, FALSE, 'Issue2', 1)



https://www.concretepage.com/spring-boot/spring-boot-crudrepository-example
3qhcGW6R
jdbc:h2:file:./src/resources/yourdbname
